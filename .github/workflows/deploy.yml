name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Step 5: Build Docker images

      - name: Make script executable
        run: chmod +x ./build.sh

      - name: Build Docker images
        run: ./build.sh
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GOOGLE_ID: ${{ secrets.GOOGLE_ID }}
          GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          MONGO_URL: ${{ secrets.MONGO_URL }}

      - name: Authenticate Docker to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 6: Tag and push images to Amazon ECR
      - name: Tag and push images
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_TAG=$(date +"%Y-%m-%d--%H.%M")

          docker tag frontend:latest $ECR_REPOSITORY:frontend-$IMAGE_TAG
          docker tag frontend:latest $ECR_REPOSITORY:frontend-latest
          docker tag backend:latest $ECR_REPOSITORY:backend-$IMAGE_TAG
          docker tag backend:latest $ECR_REPOSITORY:backend-latest

          docker push $ECR_REPOSITORY:frontend-$IMAGE_TAG
          docker push $ECR_REPOSITORY:frontend-latest
          docker push $ECR_REPOSITORY:backend-$IMAGE_TAG
          docker push $ECR_REPOSITORY:backend-latest

      # Step 7: Prepare connection to AWS EC2 instance
      - name: Prepare private key to login to AWS EC2 instance
        run: |
          echo "${{ secrets.PEM_FILE }}" > private_key.pem
          chmod 600 private_key.pem

      # Step 8: Copy files to AWS needed to bring up frontend and backend
      - name: Copy files necessary to run frontend and backend
        run: |
          scp -i private_key.pem -o StrictHostKeyChecking=no ./deploy.sh ubuntu@linguardian.com:~/
          scp -i private_key.pem -o StrictHostKeyChecking=no ./docker-compose.deploy.yml ubuntu@linguardian.com:~/

      # Step 9: Set environment variables on EC2 instance and run deploy script
      - name: Set environment variables and run deploy script on EC2 instance
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@linguardian.com \
          "MONGO_URL='$MONGO_URL' AWS_ID='$AWS_ID' AWS_REGION='$AWS_REGION' bash ~/deploy.sh"
        env:
          MONGO_URL: ${{ secrets.MONGO_URL }}
          AWS_ID: ${{ secrets.AWS_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
